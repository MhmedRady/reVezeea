@using vezeeta.BL;

@{
    Layout = "Layout/_CardView";
}

@section Styles {
    <link rel="stylesheet" type="text/css" href="~/admin/app-assets/vendors/css/tables/datatable/datatables.min.css">
    <link rel="stylesheet" type="text/css" href="~/admin/app-assets/vendors/css/extensions/sweetalert.css">
}
@if (ViewBag.CreateBtn is true)
{
    <a class="CreateBtn btn btn-info text-capitalize white my-2">
        <i class="ft-file-plus"></i>@localizer["add_new"]
    </a>
}

    
<table class="table data-table table-striped table-bordered zero-configuration text-center">
    <thead>
        <tr>
            <th>#</th>
            @foreach (var col in ViewBag.Columns)
            {
                <th>@localizer[col]</th>
            }
            <th>@localizer["actions"]</th>
        </tr>
    </thead>
    <tbody>
        <tr><td colspan="7"><span class="text-capitalize fw-bold">No Data Table</span></td></tr>
    </tbody>
    <tfoot>
        <tr>
            <th>#</th>
            @foreach (var col in ViewBag.Columns)
            {
                <th>@localizer[col]</th>
            }
            <th>@localizer["actions"]</th>
        </tr>
    </tfoot>
</table>


@section Scripts {
    <script src="~/admin/app-assets/vendors/js/tables/datatable/datatables.min.js" type="text/javascript"></script>
    <script src="~/admin/app-assets/vendors/js/tables/datatable/dataTables.buttons.min.js" type="text/javascript"></script>
    <script src="~/admin/app-assets/vendors/js/tables/datatable/dataTables.responsive.min.js" type="text/javascript"></script>

    <script src="~/admin/app-assets/vendors/js/extensions/sweetalert.min.js" type="text/javascript"></script>
    <script>
        $(document).ready(function () {
            //  let localPath = location.pathname;==>/Department

            let localPath = location.pathname.replace('/', '');
            console.log(localPath)
            $(".CreateBtn").attr("href", `${localPath}/Create`);
            let table = $(".data-table").DataTable({ 
                "processing": true, // for show progress bar          
                "serverSide": true, // for process server side  
                "filter": true, // this is for disable filter (search box)  
                "orderMulti": false, // for disable multiple column at once   
                "pageLength": 10,
                "paging": true,//false No matching records found
                //

                "ajax": {
                    "url": "@ViewData["url"]",
                    "type": "POST",
                    "datatype": "json"
                },
                "columns": [
                    {
                        "name": "#",
                        "autoWidth": true,
                        "title": "#",
                        "render": function (data, type, full, meta) {
                            return (meta.settings._iDisplayLength * table.page.info().page) + meta.row + 1
                        }
                    }, 
                    @foreach (var col in ViewBag.Columns)
                    {
                        if (col == "activate")
                        {
                            <text>
                            {
                                "name": "@localizer["activate"]", "orderable": false, "autoWidth": true,
                                "render": function (data, type, full, meta) {
                                return full.is_active
                                    ? '<span class="activate badge badge-success fw-bolder text-capitalize text-white">@localizer["isActive"]</span>'
                                    : '<span class="activate badge badge-danger fw-bolder text-capitalize text-white" >@localizer["inActive"]</span>'
                                }
                            },
                            </text>
                        }
                        else
                        {
                            <text> { "data": "@col", "name": "@localizer[col]", "autoWidth": true, "orderable": false }, </text>
                        }
                    }  
                    
                    {
                        name: "@localizer["actions"]",
                        "autoWidth": false,
                        orderable: false,
                        "render": function (data, type, full, meta) {
                            let html = "";
                            html += `<a href="${localPath}/Edit?id=${full.id}" class="btn btn-info white mx-50" data-toggle="tooltip" data-placement="top" title="@localizer["edit"]"><i class="ft-edit"></i></a>`;
                            //html += `<a href="${localPath}/Activate?id=${full.id}" class="btn btn-warning white mx-50" data-toggle="tooltip" data-placement="top" title="@localizer["activate"]"><i class="ft-repeat"></i></a>`;
                            html += `<button class="active btn btn-warning white mx-50" data-toggle="tooltip" data-placement="top" title="@localizer["activate"]" data-guid="${full.id}"><i class="ft-repeat"></i></button>`
                            html += `<button type="button" class="confirm-delete btn btn-danger white mx-50" data-guid="${full.id}"><i class="ft-trash-2"></i></button>`;
                            //html += `<a onclick="return confirm('Are you sure you want to delete IBooking Content?')" href="${localPath}/Delete?id=${full.id}" class="btn btn-danger white mx-50" data-toggle="tooltip" data-placement="top" title="@localizer["delete"]"><i class="ft-trash-2"></i></a>`;
                            return html;
                        }
                    },
                    /*
                    {
                        "render": function (data, type, full, meta) { return '<a class="btn btn-info" href="/Demo/Edit/' + full.CustomerID + '">Edit</a>'; }
                    },
                    {
                        data: null, render: function (data, type, row) {
                            return "<a href='#' class='btn btn-danger' onclick=DeleteData('" + row.CustomerID + "'); >Delete</a>";
                        }
                    },
                    */
                ]

            });

            $(document).on('click', '.confirm-delete' , function () {
                let guid = $(this).data("guid");
                console.log(guid)
		        swal({
                    title: `Are you sure to delete this ${localPath}?`,
		            text: "You will not be able to recover this imaginary file!",
		            icon: "warning",
		            showCancelButton: true,
		            buttons: {
                        cancel: {
                            text: "No, cancel!",
                            value: null,
                            visible: true,
                            className: "btn-warning",
                            closeModal: false,
                        },
                        confirm: {
                            text: "Yes, delete it!",
                            value: true,
                            visible: true,
                            className: "btn-danger",
                            closeModal: false
                        }
		            }
		        }).then(isConfirm => {
		            if (isConfirm) {
                        $.ajax({
                            method: "DELETE",
                            url: `${localPath}/Delete?id=${guid}`,
                            success: function(data){
                                console.log(data);
                                console.log(data.status);
                                if (data.status == 202) {
                                    swal("Deleted!", data.msg, "success");
                                    table.ajax.reload();
                                }else if(data.status == 404){
                                    swal("Not Found!", data.msg, "error");
                                }else{
                                    swal("Cancelled", data.msg, "error");
                                }
                            }
                        });
		            } else {
                        swal("Cancelled", `${localPath} has not been deleted. is safe!`, "warning");
		            }
		        });
	        });
            //Active ajax
            $(document).on("click", ".active", function () {
                let guid_active = $(this).data("guid");
                console.log(localPath);
                $.ajax({
                    url: `${localPath}/Activate?id=${guid_active}`,
                    success: function (responseText) {
                        console.log(responseText);
                        console.log(responseText.status);
                        if (responseText.status == 202) {
                            swal("Active Changed", responseText.msg, "success");
                            table.ajax.reload();
                        } else if (responseText.status == 404) {
                            swal("Not Found!", responseText.msg, "error");
                        } else {
                            swal("Cancelled", responseText.msg, "error");
                        }
                    }

                })
                
            });
        });
        

    </script>
}
