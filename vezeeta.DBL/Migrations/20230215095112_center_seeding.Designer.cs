// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vezeeta.DBL;

#nullable disable

namespace vezeeta.DBL.Migrations
{
    [DbContext(typeof(VezeetaDB))]
    [Migration("20230215095112_center_seeding")]
    partial class centerseeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("vezeeta.DBL.Center", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Owner Doctor UserId Where User Is Doctor");

                    b.Property<float?>("amount")
                        .HasColumnType("real");

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("Created At DateTime");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<string>("logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("slug_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("slug_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2")
                        .HasComment("Last Update DateTime");

                    b.Property<int>("views")
                        .HasColumnType("int");

                    b.Property<int>("visitors")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.HasIndex("name_ar")
                        .IsUnique();

                    b.HasIndex("name_en")
                        .IsUnique();

                    b.ToTable("centers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5c120ce7-6777-42ce-be61-d31c6a77bb6b"),
                            email = "center1@asp.net",
                            isactive = false,
                            namear = "Center 1",
                            nameen = "Center 1",
                            phone = "01234567890",
                            slugar = "center_1",
                            slugen = "center_1",
                            views = 0,
                            visitors = 0
                        },
                        new
                        {
                            Id = new Guid("4d2dad2d-911a-4a95-a9c1-879626486c51"),
                            email = "center2@asp.net",
                            isactive = false,
                            namear = "Center 2",
                            nameen = "Center 2",
                            phone = "01234567891",
                            slugar = "center_2",
                            slugen = "center_2",
                            views = 0,
                            visitors = 0
                        },
                        new
                        {
                            Id = new Guid("06fceef3-b632-466c-b354-f803cb17a107"),
                            email = "center3@asp.net",
                            isactive = false,
                            namear = "Center 3",
                            nameen = "Center 3",
                            phone = "01234567892",
                            slugar = "center_3",
                            slugen = "center_3",
                            views = 0,
                            visitors = 0
                        });
                });

            modelBuilder.Entity("vezeeta.DBL.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("Created At DateTime");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<string>("name_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("slug_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("slug_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2")
                        .HasComment("Last Update DateTime");

                    b.HasKey("Id");

                    b.HasIndex("name_ar")
                        .IsUnique();

                    b.HasIndex("name_en")
                        .IsUnique();

                    b.ToTable("departments", (string)null);
                });

            modelBuilder.Entity("vezeeta.DBL.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("N_ID")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Doctor User National ID");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2")
                        .HasComment("Created At DateTime");

                    b.Property<DateTime?>("dob")
                        .HasColumnType("datetime2")
                        .HasComment("User Date Of Barth");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<bool>("is_admin")
                        .HasColumnType("bit");

                    b.Property<bool>("is_doctor")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("middleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profile_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2")
                        .HasComment("Last Update DateTime");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("email")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex("username")
                        .IsUnique()
                        .HasFilter("[username] IS NOT NULL");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("vezeeta.DBL.db.Models.CenterSpeciality", b =>
                {
                    b.Property<Guid?>("SpecialityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("SpecialityId", "CenterId");

                    b.HasIndex("CenterId");

                    b.ToTable("centersSpecialities");
                });

            modelBuilder.Entity("vezeeta.DBL.db.Models.Speciality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SpecialityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()")
                        .HasComment("Created At DateTime");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<string>("logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name_ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("slug_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("slug_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2")
                        .HasComment("Last Update DateTime");

                    b.HasKey("Id");

                    b.HasIndex("SpecialityId");

                    b.HasIndex("name_ar")
                        .IsUnique();

                    b.HasIndex("name_en")
                        .IsUnique();

                    b.ToTable("specialities", (string)null);
                });

            modelBuilder.Entity("vezeeta.DBL.Center", b =>
                {
                    b.HasOne("vezeeta.DBL.Department", "Department")
                        .WithMany("Centers")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("vezeeta.DBL.User", "User")
                        .WithMany("Centers")
                        .HasForeignKey("UserId");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("vezeeta.DBL.db.Models.CenterSpeciality", b =>
                {
                    b.HasOne("vezeeta.DBL.Center", "Center")
                        .WithMany("CenterSpecialities")
                        .HasForeignKey("CenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vezeeta.DBL.db.Models.Speciality", "Speciality")
                        .WithMany("CenterSpecialities")
                        .HasForeignKey("SpecialityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Center");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("vezeeta.DBL.db.Models.Speciality", b =>
                {
                    b.HasOne("vezeeta.DBL.db.Models.Speciality", "MainSpeciality")
                        .WithMany()
                        .HasForeignKey("SpecialityId");

                    b.Navigation("MainSpeciality");
                });

            modelBuilder.Entity("vezeeta.DBL.Center", b =>
                {
                    b.Navigation("CenterSpecialities");
                });

            modelBuilder.Entity("vezeeta.DBL.Department", b =>
                {
                    b.Navigation("Centers");
                });

            modelBuilder.Entity("vezeeta.DBL.User", b =>
                {
                    b.Navigation("Centers");
                });

            modelBuilder.Entity("vezeeta.DBL.db.Models.Speciality", b =>
                {
                    b.Navigation("CenterSpecialities");
                });
#pragma warning restore 612, 618
        }
    }
}
